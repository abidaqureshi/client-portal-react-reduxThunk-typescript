pipeline {
    agent any

    environment {
        ADMIN_CRED = credentials('ADMIN')
        SERVER_HOST = credentials('SERVER_HOST')
        SERVER_HOSTKEY = credentials('SERVER_HOSTKEY')
        SERVER_SERVICE_DIR = 'C:\\RBPharmaPlatform\\Web\\WhichPharmaPortal-DEV'
        SERVER_SERVICE_NAME = 'RBPharma WhichPharma Portal DEV'
        GIT_PROJECT_DIR = 'WhichPharmaPortal'
        GIT_PUBLISH_DIR = 'WhichPharmaPortal/WhichPharmaPortal/bin/Release/netcoreapp3.1/publish'
        DATE_TAG = new Date().format("yyMMddHHmm")
    }

    stages {

        stage('Build') {
            steps {
				dir("$GIT_PROJECT_DIR") {
					nodejs(nodeJSInstallationName: 'Node') {
						sh 'dotnet publish -c Release'
					}
				}
                sh 'rm $GIT_PUBLISH_DIR/appsettings.json'
                sh 'mv $GIT_PUBLISH_DIR/appsettings.dev.json $GIT_PUBLISH_DIR/appsettings.json'
            }
        }
		
        stage('Test') {
            steps {
                echo 'Testing..'
				dir("WhichPharmaPortal") {
					sh 'dotnet test'
				}
            }
        }
        stage('Stop service') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
				    sh 'plink -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW $ADMIN_CRED_USR@$SERVER_HOST c:/windows/System32/inetsrv/appcmd stop site /site.name:\\"$SERVER_SERVICE_NAME\\"'
                }
            }
        }

        stage('Deploy') {
            steps {
            /*
                catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                    sh "plink -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW $ADMIN_CRED_USR@$SERVER_HOST \"for /D %f in ($SERVER_SERVICE_DIR-backup*) do @rmdir %f /Q /S\""
                    retry(5) {
						sleep(time: 5, unit: "SECONDS")
						sh 'plink -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW $ADMIN_CRED_USR@$SERVER_HOST move $SERVER_SERVICE_DIR $SERVER_SERVICE_DIR-backup${DATE_TAG}'
                    }
                    sh 'plink -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW $ADMIN_CRED_USR@$SERVER_HOST mkdir $SERVER_SERVICE_DIR'
					sh 'pscp -v -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW -r $GIT_PUBLISH_DIR/ $ADMIN_CRED_USR@$SERVER_HOST:$SERVER_SERVICE_DIR'
                }
            */
                catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                    retry(5) {
						sleep(time: 5, unit: "SECONDS")
					    sh 'pscp -v -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW -r $GIT_PUBLISH_DIR/ $ADMIN_CRED_USR@$SERVER_HOST:$SERVER_SERVICE_DIR'
                    }
                }
            }
            post {
                failure {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        sh 'plink -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW $ADMIN_CRED_USR@$SERVER_HOST move $SERVER_SERVICE_DIR-backup${DATE_TAG} $SERVER_SERVICE_DIR'
                    }
                }
            }
        }

        stage('Start service') {
             steps {
				sh 'plink -batch -P 22 -hostkey $SERVER_HOSTKEY -pw $ADMIN_CRED_PSW $ADMIN_CRED_USR@$SERVER_HOST c:/windows/System32/inetsrv/appcmd start site /site.name:\\"$SERVER_SERVICE_NAME\\"'
             }
        }
    }
}